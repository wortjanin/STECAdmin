//*
//* DO NOT EDIT THIS FILE 
//* This file is generated from file ./../me.stec.admin/sql/table/100902_00-35_vw_stec_stud.sql 
//* Edit that file if it is necessary and run me.stec.jet.Main for regeneration
//* (me.ste.jet -> right click -> Run As -> Java Application -> Main - me.stec.jet)
//* or create an inherent class to extend the functionality.
//*

package me.stec.admin.logic.user;

import java.sql.SQLException;

import java.math.BigDecimal;

import com.google.common.collect.BiMap;
import com.google.common.collect.HashBiMap;

import me.stec.admin.enumer.*;
import me.stec.admin.iface.IAttr;
import me.stec.admin.iface.IVal;
import me.stec.admin.logic.DbField;
import me.stec.admin.logic.AItem;
import me.stec.admin.db.Privs;

/**
* Студент
*/
public class Student extends 
AItem{
	@Override
	public String getDbSchemeName(){
		return "VW_STEC_STUD";
	}

	@Override
	public boolean getDbSchemeReadOnly(){
		return true;
	}

	@Override
	public BigDecimal getID() {
		return this.getId().getValue();
	}
	@Override
	public void setID(BigDecimal id) {
		this.getId().setValue(id);
	} 

	@Override
	public String getIdDbColumnName() {
		return this.getId().getDbColumnName();
	}

	@Override
	protected String getLoadQuery() {
		return Student.sLoadQuery;
	} 
	@Override
	protected String getInsertQuery() {
		return Student.sInsertQuery;
	} 
	@Override
	protected String getUpdateQuery() {
		return Student.sUpdateQuery;
	} 
	@Override
	protected String getDeleteQuery() {
		return Student.sDeleteQuery;
	} 
	
	protected static final BiMap<String, Integer> columnNumber = HashBiMap.create();
	@Override
	protected BiMap<String, Integer> getColumnNumber() {
		return columnNumber;
	}
	
	/**
	 * NOTE: field m_def SHOULD NEVER BE CHANGED (as well as it's state)  
	 */
	private static final Student m_def = new Student();  
	/**
	 * NOTE: sLoadQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	static{
		FillColumnData(m_def);
	}
	
	/**
	 * NOTE: sLoadQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	private static String sLoadQuery	= m_def.getLoadQueryString();
	/**
	 * NOTE: sInsertQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	private static String sInsertQuery	= m_def.getInsertQueryString();
	/**
	 * NOTE: sUpdateQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	private static String sUpdateQuery	= m_def.getUpdateQueryString();
	/**
	 * NOTE: sDeleteQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	private static String sDeleteQuery	= m_def.getDeleteQueryString();

	
	@Override
	public String getLastIdQuery(){
		return "SELECT sq_stec_user_i.currval FROM DUAL";
	}

	private static final class Inner{
		private static boolean canSelect = false;
		private static boolean canInsert = false;
		private static boolean canUpdate = false;
		private static boolean canDelete = false;
		static{
			Privs.setup(m_def);
		}
	}

	@Override
	public void setCanSelect(boolean canSelect){
		Student.Inner.canSelect = canSelect;
	}
	@Override
	public boolean canSelect(){
		return 	Student.Inner.canSelect;
	}
	
	@Override
	public void setCanInsert(boolean canInsert){
		Student.Inner.canInsert = canInsert;
	}
	@Override
	public boolean canInsert(){
		return 	Student.Inner.canInsert;
	}

	@Override
	public void setCanUpdate(boolean canUpdate){
		Student.Inner.canUpdate = canUpdate;
	}
	@Override
	public boolean canUpdate(){
		return 	Student.Inner.canUpdate;
	}

	@Override
	public void setCanDelete(boolean canDelete){
		Student.Inner.canDelete = canDelete;
	}
	@Override
	public boolean canDelete(){
		return 	Student.Inner.canDelete;
	}
	
		
		public Student(){
			super(new IVal[]{
				new DbField<BigDecimal, zzzIdAttr>(null, zzzIdAttr.getInstance()),
				new DbField<String, zzzSurnameAttr>(null, zzzSurnameAttr.getInstance()),
				new DbField<String, zzzNameAttr>(null, zzzNameAttr.getInstance()),
				new DbField<String, zzzPatronymicAttr>(null, zzzPatronymicAttr.getInstance()),
				new DbField<EGender, zzzGenderAttr>(null, zzzGenderAttr.getInstance()),
				new DbField<String, zzzLoginAttr>(null, zzzLoginAttr.getInstance()),
				new DbField<String, zzzPasswordAttr>(null, zzzPasswordAttr.getInstance()),
				new DbField<EYN, zzzPassIsTempAttr>(null, zzzPassIsTempAttr.getInstance()),
				new DbField<String, zzzKursAttr>(null, zzzKursAttr.getInstance()),
				new DbField<String, zzzFacultyAttr>(null, zzzFacultyAttr.getInstance()),
				new DbField<String, zzzSpecialityAttr>(null, zzzSpecialityAttr.getInstance()),
				new DbField<String, zzzGroupUniverAttr>(null, zzzGroupUniverAttr.getInstance()),
				new DbField<BigDecimal, zzzIdKursAttr>(null, zzzIdKursAttr.getInstance()),
				new DbField<BigDecimal, zzzIdFacultyAttr>(null, zzzIdFacultyAttr.getInstance()),
				new DbField<BigDecimal, zzzIdSpecialityAttr>(null, zzzIdSpecialityAttr.getInstance()),
				new DbField<BigDecimal, zzzIdStecGroupAttr>(null, zzzIdStecGroupAttr.getInstance())
			});
		}
		public Student(BigDecimal id, boolean forUpdate)  throws SQLException {
			this();
			this.setID(id);
			load(forUpdate);
		}

		public static Student getDef(){
			return Student.m_def;
		}
		
		public static final class zzzIdAttr extends IAttr{
			private zzzIdAttr(){}
			private static final zzzIdAttr m_Instance = new zzzIdAttr();
			public static zzzIdAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Id";  }
			public String           getDbColumnName()		{ return "STEC_USER_ID"; }  
			public String           getCaption()			{ return "ИН Студента"; }  
			public boolean          getDbReadOnly()			{ return true; }  
			public boolean          getDbIsNotNull()		{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, zzzIdAttr> getId() { return (DbField<BigDecimal, zzzIdAttr>)super.val[0]; } 
		public void setId(DbField<BigDecimal, zzzIdAttr> value) { super.val[0].setVal(value.getVal());} 
		public void setId(BigDecimal value) { super.val[0].setVal(value);}
		
		
		public static final class zzzSurnameAttr extends IAttr{
			private zzzSurnameAttr(){}
			private static final zzzSurnameAttr m_Instance = new zzzSurnameAttr();
			public static zzzSurnameAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Surname";  }
			public String           getDbColumnName()		{ return "SURNAME"; }  
			public String           getCaption()			{ return "Фамилия"; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzSurnameAttr> getSurname() { return (DbField<String, zzzSurnameAttr>)super.val[1]; } 
		public void setSurname(DbField<String, zzzSurnameAttr> value) { super.val[1].setVal(value.getVal());} 
		public void setSurname(String value) { super.val[1].setVal(value);}
		
		
		public static final class zzzNameAttr extends IAttr{
			private zzzNameAttr(){}
			private static final zzzNameAttr m_Instance = new zzzNameAttr();
			public static zzzNameAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Name";  }
			public String           getDbColumnName()		{ return "NAME"; }  
			public String           getCaption()			{ return "Имя"; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzNameAttr> getName() { return (DbField<String, zzzNameAttr>)super.val[2]; } 
		public void setName(DbField<String, zzzNameAttr> value) { super.val[2].setVal(value.getVal());} 
		public void setName(String value) { super.val[2].setVal(value);}
		
		
		public static final class zzzPatronymicAttr extends IAttr{
			private zzzPatronymicAttr(){}
			private static final zzzPatronymicAttr m_Instance = new zzzPatronymicAttr();
			public static zzzPatronymicAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Patronymic";  }
			public String           getDbColumnName()		{ return "PATRONYMIC"; }  
			public String           getCaption()			{ return "Отчество"; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzPatronymicAttr> getPatronymic() { return (DbField<String, zzzPatronymicAttr>)super.val[3]; } 
		public void setPatronymic(DbField<String, zzzPatronymicAttr> value) { super.val[3].setVal(value.getVal());} 
		public void setPatronymic(String value) { super.val[3].setVal(value);}
		
		
		public static final class zzzGenderAttr extends EGender.AAttr{
			private zzzGenderAttr(){}
			private static final zzzGenderAttr m_Instance = new zzzGenderAttr();
			public static zzzGenderAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Gender";  }
			public String           getDbColumnName()		{ return "GENDER"; }  
			public String           getCaption()			{ return "Пол"; }         }
		@SuppressWarnings("unchecked")
		public DbField<EGender, zzzGenderAttr> getGender() { return (DbField<EGender, zzzGenderAttr>)super.val[4]; } 
		public void setGender(DbField<EGender, zzzGenderAttr> value) { super.val[4].setVal(value.getVal());} 
		public void setGender(EGender value) { super.val[4].setVal(value);}
		
		
		public static final class zzzLoginAttr extends IAttr{
			private zzzLoginAttr(){}
			private static final zzzLoginAttr m_Instance = new zzzLoginAttr();
			public static zzzLoginAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Login";  }
			public String           getDbColumnName()		{ return "LOGIN"; }  
			public String           getCaption()			{ return "Логин"; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzLoginAttr> getLogin() { return (DbField<String, zzzLoginAttr>)super.val[5]; } 
		public void setLogin(DbField<String, zzzLoginAttr> value) { super.val[5].setVal(value.getVal());} 
		public void setLogin(String value) { super.val[5].setVal(value);}
		
		
		public static final class zzzPasswordAttr extends IAttr{
			private zzzPasswordAttr(){}
			private static final zzzPasswordAttr m_Instance = new zzzPasswordAttr();
			public static zzzPasswordAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Password";  }
			public String           getDbColumnName()		{ return "PW"; }  
			public String           getCaption()			{ return "Пароль"; }  
			public boolean          getDbLoadableInList()	{ return false; }  
			public boolean          getDbSaveOnly()			{ return true; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzPasswordAttr> getPassword() { return (DbField<String, zzzPasswordAttr>)super.val[6]; } 
		public void setPassword(DbField<String, zzzPasswordAttr> value) { super.val[6].setVal(value.getVal());} 
		public void setPassword(String value) { super.val[6].setVal(value);}
		
		
		public static final class zzzPassIsTempAttr extends EYN.AAttr{
			private zzzPassIsTempAttr(){}
			private static final zzzPassIsTempAttr m_Instance = new zzzPassIsTempAttr();
			public static zzzPassIsTempAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "PassIsTemp";  }
			public String           getDbColumnName()		{ return "PW_IS_TEMP"; }  
			public String           getCaption()			{ return "Пароль временный"; }  
			public boolean          getDbReadOnly()			{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<EYN, zzzPassIsTempAttr> getPassIsTemp() { return (DbField<EYN, zzzPassIsTempAttr>)super.val[7]; } 
		public void setPassIsTemp(DbField<EYN, zzzPassIsTempAttr> value) { super.val[7].setVal(value.getVal());} 
		public void setPassIsTemp(EYN value) { super.val[7].setVal(value);}
		
		
		public static final class zzzKursAttr extends IAttr{
			private zzzKursAttr(){}
			private static final zzzKursAttr m_Instance = new zzzKursAttr();
			public static zzzKursAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Kurs";  }
			public String           getDbColumnName()		{ return "KURS"; }  
			public String           getCaption()			{ return "Курс"; }  
			public boolean          getDbReadOnly()			{ return true; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzKursAttr> getKurs() { return (DbField<String, zzzKursAttr>)super.val[8]; } 
		public void setKurs(DbField<String, zzzKursAttr> value) { super.val[8].setVal(value.getVal());} 
		public void setKurs(String value) { super.val[8].setVal(value);}
		
		
		public static final class zzzFacultyAttr extends IAttr{
			private zzzFacultyAttr(){}
			private static final zzzFacultyAttr m_Instance = new zzzFacultyAttr();
			public static zzzFacultyAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Faculty";  }
			public String           getDbColumnName()		{ return "FACULTY"; }  
			public String           getCaption()			{ return "Факультет"; }  
			public boolean          getDbReadOnly()			{ return true; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzFacultyAttr> getFaculty() { return (DbField<String, zzzFacultyAttr>)super.val[9]; } 
		public void setFaculty(DbField<String, zzzFacultyAttr> value) { super.val[9].setVal(value.getVal());} 
		public void setFaculty(String value) { super.val[9].setVal(value);}
		
		
		public static final class zzzSpecialityAttr extends IAttr{
			private zzzSpecialityAttr(){}
			private static final zzzSpecialityAttr m_Instance = new zzzSpecialityAttr();
			public static zzzSpecialityAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "Speciality";  }
			public String           getDbColumnName()		{ return "SPECIALITY"; }  
			public String           getCaption()			{ return "Специальность"; }  
			public boolean          getDbReadOnly()			{ return true; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzSpecialityAttr> getSpeciality() { return (DbField<String, zzzSpecialityAttr>)super.val[10]; } 
		public void setSpeciality(DbField<String, zzzSpecialityAttr> value) { super.val[10].setVal(value.getVal());} 
		public void setSpeciality(String value) { super.val[10].setVal(value);}
		
		
		public static final class zzzGroupUniverAttr extends IAttr{
			private zzzGroupUniverAttr(){}
			private static final zzzGroupUniverAttr m_Instance = new zzzGroupUniverAttr();
			public static zzzGroupUniverAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "GroupUniver";  }
			public String           getDbColumnName()		{ return "GROUP_UNIVER"; }  
			public String           getCaption()			{ return "Группа"; }  
			public boolean          getDbReadOnly()			{ return true; }  
			public boolean          isString()				{ return true; }         }
		@SuppressWarnings("unchecked")
		public DbField<String, zzzGroupUniverAttr> getGroupUniver() { return (DbField<String, zzzGroupUniverAttr>)super.val[11]; } 
		public void setGroupUniver(DbField<String, zzzGroupUniverAttr> value) { super.val[11].setVal(value.getVal());} 
		public void setGroupUniver(String value) { super.val[11].setVal(value);}
		
		
		public static final class zzzIdKursAttr extends IAttr{
			private zzzIdKursAttr(){}
			private static final zzzIdKursAttr m_Instance = new zzzIdKursAttr();
			public static zzzIdKursAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "IdKurs";  }
			public String           getDbColumnName()		{ return "DIV_KURS_ID"; }  
			public String           getCaption()			{ return "ИН Курса"; }  
			public boolean          getDbLoadableInList()	{ return false; }         }
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, zzzIdKursAttr> getIdKurs() { return (DbField<BigDecimal, zzzIdKursAttr>)super.val[12]; } 
		public void setIdKurs(DbField<BigDecimal, zzzIdKursAttr> value) { super.val[12].setVal(value.getVal());} 
		public void setIdKurs(BigDecimal value) { super.val[12].setVal(value);}
		
		
		public static final class zzzIdFacultyAttr extends IAttr{
			private zzzIdFacultyAttr(){}
			private static final zzzIdFacultyAttr m_Instance = new zzzIdFacultyAttr();
			public static zzzIdFacultyAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "IdFaculty";  }
			public String           getDbColumnName()		{ return "DIV_FACULTY_ID"; }  
			public String           getCaption()			{ return "ИН Факультета"; }  
			public boolean          getDbLoadableInList()	{ return false; }         }
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, zzzIdFacultyAttr> getIdFaculty() { return (DbField<BigDecimal, zzzIdFacultyAttr>)super.val[13]; } 
		public void setIdFaculty(DbField<BigDecimal, zzzIdFacultyAttr> value) { super.val[13].setVal(value.getVal());} 
		public void setIdFaculty(BigDecimal value) { super.val[13].setVal(value);}
		
		
		public static final class zzzIdSpecialityAttr extends IAttr{
			private zzzIdSpecialityAttr(){}
			private static final zzzIdSpecialityAttr m_Instance = new zzzIdSpecialityAttr();
			public static zzzIdSpecialityAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "IdSpeciality";  }
			public String           getDbColumnName()		{ return "DIV_SPECIALITY_ID"; }  
			public String           getCaption()			{ return "ИН Специальности"; }  
			public boolean          getDbLoadableInList()	{ return false; }         }
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, zzzIdSpecialityAttr> getIdSpeciality() { return (DbField<BigDecimal, zzzIdSpecialityAttr>)super.val[14]; } 
		public void setIdSpeciality(DbField<BigDecimal, zzzIdSpecialityAttr> value) { super.val[14].setVal(value.getVal());} 
		public void setIdSpeciality(BigDecimal value) { super.val[14].setVal(value);}
		
		
		public static final class zzzIdStecGroupAttr extends IAttr{
			private zzzIdStecGroupAttr(){}
			private static final zzzIdStecGroupAttr m_Instance = new zzzIdStecGroupAttr();
			public static zzzIdStecGroupAttr getInstance() {return m_Instance; }
			public String           getName()				{ return "IdStecGroup";  }
			public String           getDbColumnName()		{ return "DIV_GROUP_UNIVER_ID"; }  
			public String           getCaption()			{ return "ИН Группы"; }  
			public boolean          getDbLoadableInList()	{ return false; }         }
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, zzzIdStecGroupAttr> getIdStecGroup() { return (DbField<BigDecimal, zzzIdStecGroupAttr>)super.val[15]; } 
		public void setIdStecGroup(DbField<BigDecimal, zzzIdStecGroupAttr> value) { super.val[15].setVal(value.getVal());} 
		public void setIdStecGroup(BigDecimal value) { super.val[15].setVal(value);}
		
		
}
