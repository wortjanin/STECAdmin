//*
//* DO NOT EDIT THIS FILE 
//* This file is generated from file ./../me.stec.admin/sql/table/100902_00-06_vw_stec_user.sql 
//* Edit that file if it is necessary and run me.stec.jet.Main for regeneration
//* (me.ste.jet -> right click -> Run As -> Java Application -> Main - me.stec.jet)
//* or create an inherent class to extend the functionality.
//*

package me.stec.admin.logic.user;

import java.math.BigDecimal;



import me.stec.admin.iface.IVal;
import me.stec.admin.logic.DbField;
import me.stec.admin.logic.AItemList;

/**
* Список Пользователей
*/
public class StecUserList extends 
AItemList{

	@Override
	public String getDbSchemeName(){
		return "VW_STEC_USER";
	}
	
	@Override
	public boolean getDbSchemeReadOnly(){
		return true;
	}

	@Override
	protected String getLoadQuery() {
		return StecUserList.sLoadQuery;
	}
	@Override
	protected String getLoadComboQuery(){
		return StecUserList.sLoadComboQuery;
	}
	@Override
	protected String getDeleteQuery() {
		return StecUserList.sDeleteQuery;
	}
	/**
	 * NOTE: m_def should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	protected static final StecUserList m_def = new StecUserList();
//	static{
//		m_def.sOrderBy = m_def.sOrderByCombo = " ORDER BY " + m_def.getId().getDbColumnName();
//	}
	
	/**
	 * NOTE: sLoadQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	protected static String sLoadQuery		= m_def.getLoadQueryString();
	/**
	 * NOTE: sLoadComboQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	protected static String sLoadComboQuery = m_def.getLoadComboQueryString();
	/**
	 * NOTE: sDeleteQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	protected static String sDeleteQuery	= m_def.getDeleteQueryString();
	
		public StecUserList(){
			this(false,		0);
		}
		public StecUserList(boolean bDistinct){
			this(bDistinct, 0);//0 (or negative int) means no limit
		}
		public StecUserList(boolean bDistinct, int iLimit){
			super(new IVal[]{
				new DbField<BigDecimal, StecUser.zzzIdAttr>(null, StecUser.zzzIdAttr.getInstance()),
				new DbField<String, StecUser.zzzSurnameAttr>(null, StecUser.zzzSurnameAttr.getInstance()),
				new DbField<String, StecUser.zzzNameAttr>(null, StecUser.zzzNameAttr.getInstance()),
				new DbField<String, StecUser.zzzPatronymicAttr>(null, StecUser.zzzPatronymicAttr.getInstance()),
				new DbField<String, StecUser.zzzGenderAttr>(null, StecUser.zzzGenderAttr.getInstance()),
				new DbField<String, StecUser.zzzLoginAttr>(null, StecUser.zzzLoginAttr.getInstance()),
				new DbField<String, StecUser.zzzPasswordAttr>(null, StecUser.zzzPasswordAttr.getInstance()),
				new DbField<Boolean, StecUser.zzzPassIsTempAttr>(null, StecUser.zzzPassIsTempAttr.getInstance()),
				new DbField<String, StecUser.zzzBlockedAttr>(null, StecUser.zzzBlockedAttr.getInstance()),
				new DbField<BigDecimal, StecUser.zzzIdCatAttr>(null, StecUser.zzzIdCatAttr.getInstance()),
				new DbField<String, StecUser.zzzCatAttr>(null, StecUser.zzzCatAttr.getInstance())
			});
			
			super.bDistinct 	= bDistinct;
			super.iLimit		= iLimit;
			
			if (null == m_def)	return;
			
			super.getListHeader().addAll(m_def.getListHeader());
			super.sOrderBy		= m_def.sOrderBy;
			super.sOrderByCombo	= m_def.sOrderByCombo;
			
		}

		@Override
		public StecUser getItemDef(){
			return StecUser.getDef();
		}
		
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, StecUser.zzzIdAttr> getId() { return (DbField<BigDecimal, StecUser.zzzIdAttr>)super.val[0]; } 
		public void setId(DbField<BigDecimal, StecUser.zzzIdAttr> value) { super.val[0].setVal(value.getVal());}
		public void setId(BigDecimal value) { super.val[0].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, StecUser.zzzSurnameAttr> getSurname() { return (DbField<String, StecUser.zzzSurnameAttr>)super.val[1]; } 
		public void setSurname(DbField<String, StecUser.zzzSurnameAttr> value) { super.val[1].setVal(value.getVal());}
		public void setSurname(String value) { super.val[1].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, StecUser.zzzNameAttr> getName() { return (DbField<String, StecUser.zzzNameAttr>)super.val[2]; } 
		public void setName(DbField<String, StecUser.zzzNameAttr> value) { super.val[2].setVal(value.getVal());}
		public void setName(String value) { super.val[2].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, StecUser.zzzPatronymicAttr> getPatronymic() { return (DbField<String, StecUser.zzzPatronymicAttr>)super.val[3]; } 
		public void setPatronymic(DbField<String, StecUser.zzzPatronymicAttr> value) { super.val[3].setVal(value.getVal());}
		public void setPatronymic(String value) { super.val[3].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, StecUser.zzzGenderAttr> getGender() { return (DbField<String, StecUser.zzzGenderAttr>)super.val[4]; } 
		public void setGender(DbField<String, StecUser.zzzGenderAttr> value) { super.val[4].setVal(value.getVal());}
		public void setGender(String value) { super.val[4].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, StecUser.zzzLoginAttr> getLogin() { return (DbField<String, StecUser.zzzLoginAttr>)super.val[5]; } 
		public void setLogin(DbField<String, StecUser.zzzLoginAttr> value) { super.val[5].setVal(value.getVal());}
		public void setLogin(String value) { super.val[5].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, StecUser.zzzPasswordAttr> getPassword() { return (DbField<String, StecUser.zzzPasswordAttr>)super.val[6]; } 
		public void setPassword(DbField<String, StecUser.zzzPasswordAttr> value) { super.val[6].setVal(value.getVal());}
		public void setPassword(String value) { super.val[6].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<Boolean, StecUser.zzzPassIsTempAttr> getPassIsTemp() { return (DbField<Boolean, StecUser.zzzPassIsTempAttr>)super.val[7]; } 
		public void setPassIsTemp(DbField<Boolean, StecUser.zzzPassIsTempAttr> value) { super.val[7].setVal(value.getVal());}
		public void setPassIsTemp(Boolean value) { super.val[7].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, StecUser.zzzBlockedAttr> getBlocked() { return (DbField<String, StecUser.zzzBlockedAttr>)super.val[8]; } 
		public void setBlocked(DbField<String, StecUser.zzzBlockedAttr> value) { super.val[8].setVal(value.getVal());}
		public void setBlocked(String value) { super.val[8].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, StecUser.zzzIdCatAttr> getIdCat() { return (DbField<BigDecimal, StecUser.zzzIdCatAttr>)super.val[9]; } 
		public void setIdCat(DbField<BigDecimal, StecUser.zzzIdCatAttr> value) { super.val[9].setVal(value.getVal());}
		public void setIdCat(BigDecimal value) { super.val[9].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, StecUser.zzzCatAttr> getCat() { return (DbField<String, StecUser.zzzCatAttr>)super.val[10]; } 
		public void setCat(DbField<String, StecUser.zzzCatAttr> value) { super.val[10].setVal(value.getVal());}
		public void setCat(String value) { super.val[10].setVal(value);}
		 
}
