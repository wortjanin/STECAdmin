//*
//* DO NOT EDIT THIS FILE 
//* This file is generated from file ./../me.stec.admin/sql/table/100902_00-35_vw_stec_stud.sql 
//* Edit that file if it is necessary and run me.stec.jet.Main for regeneration
//* (me.ste.jet -> right click -> Run As -> Java Application -> Main - me.stec.jet)
//* or create an inherent class to extend the functionality.
//*

package me.stec.admin.logic.user;

import java.math.BigDecimal;


import me.stec.admin.enumer.*;
import me.stec.admin.iface.IVal;
import me.stec.admin.logic.DbField;
import me.stec.admin.logic.AItemList;

/**
* Список Студентов
*/
public class StudentList extends 
AItemList{

	@Override
	public String getDbSchemeName(){
		return "VW_STEC_STUD";
	}
	
	@Override
	public boolean getDbSchemeReadOnly(){
		return true;
	}

	@Override
	protected String getLoadQuery() {
		return StudentList.sLoadQuery;
	}
	@Override
	protected String getLoadComboQuery(){
		return StudentList.sLoadComboQuery;
	}
	@Override
	protected String getDeleteQuery() {
		return StudentList.sDeleteQuery;
	}
	/**
	 * NOTE: m_def should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	protected static final StudentList m_def = new StudentList();
//	static{
//		m_def.sOrderBy = m_def.sOrderByCombo = " ORDER BY " + m_def.getId().getDbColumnName();
//	}
	
	/**
	 * NOTE: sLoadQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	protected static String sLoadQuery		= m_def.getLoadQueryString();
	/**
	 * NOTE: sLoadComboQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	protected static String sLoadComboQuery = m_def.getLoadComboQueryString();
	/**
	 * NOTE: sDeleteQuery should NEVER be changed DYNAMICALLY, 
	 * only a static context is encouraged for any change  
	 */
	protected static String sDeleteQuery	= m_def.getDeleteQueryString();
	
		public StudentList(){
			this(false,		0);
		}
		public StudentList(boolean bDistinct){
			this(bDistinct, 0);//0 (or negative int) means no limit
		}
		public StudentList(boolean bDistinct, int iLimit){
			super(new IVal[]{
				new DbField<BigDecimal, Student.zzzIdAttr>(null, Student.zzzIdAttr.getInstance()),
				new DbField<String, Student.zzzSurnameAttr>(null, Student.zzzSurnameAttr.getInstance()),
				new DbField<String, Student.zzzNameAttr>(null, Student.zzzNameAttr.getInstance()),
				new DbField<String, Student.zzzPatronymicAttr>(null, Student.zzzPatronymicAttr.getInstance()),
				new DbField<EGender, Student.zzzGenderAttr>(null, Student.zzzGenderAttr.getInstance()),
				new DbField<String, Student.zzzLoginAttr>(null, Student.zzzLoginAttr.getInstance()),
				new DbField<String, Student.zzzPasswordAttr>(null, Student.zzzPasswordAttr.getInstance()),
				new DbField<EYN, Student.zzzPassIsTempAttr>(null, Student.zzzPassIsTempAttr.getInstance()),
				new DbField<String, Student.zzzKursAttr>(null, Student.zzzKursAttr.getInstance()),
				new DbField<String, Student.zzzFacultyAttr>(null, Student.zzzFacultyAttr.getInstance()),
				new DbField<String, Student.zzzSpecialityAttr>(null, Student.zzzSpecialityAttr.getInstance()),
				new DbField<String, Student.zzzGroupUniverAttr>(null, Student.zzzGroupUniverAttr.getInstance()),
				new DbField<BigDecimal, Student.zzzIdKursAttr>(null, Student.zzzIdKursAttr.getInstance()),
				new DbField<BigDecimal, Student.zzzIdFacultyAttr>(null, Student.zzzIdFacultyAttr.getInstance()),
				new DbField<BigDecimal, Student.zzzIdSpecialityAttr>(null, Student.zzzIdSpecialityAttr.getInstance()),
				new DbField<BigDecimal, Student.zzzIdStecGroupAttr>(null, Student.zzzIdStecGroupAttr.getInstance())
			});
			
			super.bDistinct 	= bDistinct;
			super.iLimit		= iLimit;
			
			if (null == m_def)	return;
			
			super.getListHeader().addAll(m_def.getListHeader());
			super.sOrderBy		= m_def.sOrderBy;
			super.sOrderByCombo	= m_def.sOrderByCombo;
			
		}

		@Override
		public Student getItemDef(){
			return Student.getDef();
		}
		
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, Student.zzzIdAttr> getId() { return (DbField<BigDecimal, Student.zzzIdAttr>)super.val[0]; } 
		public void setId(DbField<BigDecimal, Student.zzzIdAttr> value) { super.val[0].setVal(value.getVal());}
		public void setId(BigDecimal value) { super.val[0].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzSurnameAttr> getSurname() { return (DbField<String, Student.zzzSurnameAttr>)super.val[1]; } 
		public void setSurname(DbField<String, Student.zzzSurnameAttr> value) { super.val[1].setVal(value.getVal());}
		public void setSurname(String value) { super.val[1].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzNameAttr> getName() { return (DbField<String, Student.zzzNameAttr>)super.val[2]; } 
		public void setName(DbField<String, Student.zzzNameAttr> value) { super.val[2].setVal(value.getVal());}
		public void setName(String value) { super.val[2].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzPatronymicAttr> getPatronymic() { return (DbField<String, Student.zzzPatronymicAttr>)super.val[3]; } 
		public void setPatronymic(DbField<String, Student.zzzPatronymicAttr> value) { super.val[3].setVal(value.getVal());}
		public void setPatronymic(String value) { super.val[3].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<EGender, Student.zzzGenderAttr> getGender() { return (DbField<EGender, Student.zzzGenderAttr>)super.val[4]; } 
		public void setGender(DbField<EGender, Student.zzzGenderAttr> value) { super.val[4].setVal(value.getVal());}
		public void setGender(EGender value) { super.val[4].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzLoginAttr> getLogin() { return (DbField<String, Student.zzzLoginAttr>)super.val[5]; } 
		public void setLogin(DbField<String, Student.zzzLoginAttr> value) { super.val[5].setVal(value.getVal());}
		public void setLogin(String value) { super.val[5].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzPasswordAttr> getPassword() { return (DbField<String, Student.zzzPasswordAttr>)super.val[6]; } 
		public void setPassword(DbField<String, Student.zzzPasswordAttr> value) { super.val[6].setVal(value.getVal());}
		public void setPassword(String value) { super.val[6].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<EYN, Student.zzzPassIsTempAttr> getPassIsTemp() { return (DbField<EYN, Student.zzzPassIsTempAttr>)super.val[7]; } 
		public void setPassIsTemp(DbField<EYN, Student.zzzPassIsTempAttr> value) { super.val[7].setVal(value.getVal());}
		public void setPassIsTemp(EYN value) { super.val[7].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzKursAttr> getKurs() { return (DbField<String, Student.zzzKursAttr>)super.val[8]; } 
		public void setKurs(DbField<String, Student.zzzKursAttr> value) { super.val[8].setVal(value.getVal());}
		public void setKurs(String value) { super.val[8].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzFacultyAttr> getFaculty() { return (DbField<String, Student.zzzFacultyAttr>)super.val[9]; } 
		public void setFaculty(DbField<String, Student.zzzFacultyAttr> value) { super.val[9].setVal(value.getVal());}
		public void setFaculty(String value) { super.val[9].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzSpecialityAttr> getSpeciality() { return (DbField<String, Student.zzzSpecialityAttr>)super.val[10]; } 
		public void setSpeciality(DbField<String, Student.zzzSpecialityAttr> value) { super.val[10].setVal(value.getVal());}
		public void setSpeciality(String value) { super.val[10].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<String, Student.zzzGroupUniverAttr> getGroupUniver() { return (DbField<String, Student.zzzGroupUniverAttr>)super.val[11]; } 
		public void setGroupUniver(DbField<String, Student.zzzGroupUniverAttr> value) { super.val[11].setVal(value.getVal());}
		public void setGroupUniver(String value) { super.val[11].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, Student.zzzIdKursAttr> getIdKurs() { return (DbField<BigDecimal, Student.zzzIdKursAttr>)super.val[12]; } 
		public void setIdKurs(DbField<BigDecimal, Student.zzzIdKursAttr> value) { super.val[12].setVal(value.getVal());}
		public void setIdKurs(BigDecimal value) { super.val[12].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, Student.zzzIdFacultyAttr> getIdFaculty() { return (DbField<BigDecimal, Student.zzzIdFacultyAttr>)super.val[13]; } 
		public void setIdFaculty(DbField<BigDecimal, Student.zzzIdFacultyAttr> value) { super.val[13].setVal(value.getVal());}
		public void setIdFaculty(BigDecimal value) { super.val[13].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, Student.zzzIdSpecialityAttr> getIdSpeciality() { return (DbField<BigDecimal, Student.zzzIdSpecialityAttr>)super.val[14]; } 
		public void setIdSpeciality(DbField<BigDecimal, Student.zzzIdSpecialityAttr> value) { super.val[14].setVal(value.getVal());}
		public void setIdSpeciality(BigDecimal value) { super.val[14].setVal(value);}
		 
		@SuppressWarnings("unchecked")
		public DbField<BigDecimal, Student.zzzIdStecGroupAttr> getIdStecGroup() { return (DbField<BigDecimal, Student.zzzIdStecGroupAttr>)super.val[15]; } 
		public void setIdStecGroup(DbField<BigDecimal, Student.zzzIdStecGroupAttr> value) { super.val[15].setVal(value.getVal());}
		public void setIdStecGroup(BigDecimal value) { super.val[15].setVal(value);}
		 
}
